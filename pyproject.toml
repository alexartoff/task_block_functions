[tool.poetry]
name = "block_functions"
version = "0.1.0"
description = "практические задания из блока курса про функции"
authors = ["alexandertarakanov <alex.artoff@gmail.com>"]
packages = [{include = "block_func"},]

[tool.poetry.scripts]
t1-greet = "block_func.scripts.task1_greet:main"
t2-get-color = "block_func.scripts.task2_get_colors:main"
t3-updated = "block_func.scripts.task3_updated:main"
t4-call-twice = "block_func.scripts.task4_call_twice:main"
t5-filter-map = "block_func.scripts.task5_filter_map:main"
t6-mfr = "block_func.scripts.task6_mfr:main"
t7-closure = "block_func.scripts.task7_closure:main"
t8-lambda = "block_func.scripts.task8_lambda:main"
t9-decor = "block_func.scripts.task9_decorators:main"
t10-mdecor = "block_func.scripts.task10_more_decorators:main"
t11-recurs = "block_func.scripts.task11_recursion:main"
tf-count-by-year = "block_func.scripts.task_counted_by_year:main"
tf-compose = "block_func.scripts.task_compose:main"
tf-nrzi = "block_func.scripts.task_nrzi_decode:main"
tf-fin = "block_func.scripts.task_find_index_nearest:main"
tf-color = "block_func.scripts.task_color_inverse:main"
tf-ip4 = "block_func.scripts.task_ip4_convert:main"
tf-anagram = "block_func.scripts.task_filter_anagram:main"
tf-histo = "block_func.scripts.task_histo:main"

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]
pytest = "^5.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
